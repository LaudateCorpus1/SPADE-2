# The structure of the file is as follows:
# The encryption level could be low, medium or high.
# For a given level of encryption, provenance is individually encrypted for that level,
# Encryption is done according to the strategy programmed in the transformer source code.

# 'keysDirectory' contains the master public key used for encryption and the secret keys used in decryption.
# One line in the file contains the encryption level, followed by a comma-separated list of annotations to encrypt.
# Each annotation could be followed by the name of the custom class for handling the encryption and decryption of that
# annotation in square brackets, like this:
# <annotation_name>[CustomClassName]
# The custom class implements the functions containing the strategy for encryption and decryption of the annotation.
# In the absence of a custom class, the annotation would be encrypted/decrypted with the default strategy.

# Following are the various strategies for encryption composite annotations. Each of these annotations has a custom
# class implemented for encrypting/decrypting them.
# remote/local address: (xxx.xxx.xxx.xxx)
# 'low', the second octet is encrypted.
# 'medium', the third octet is encrypted.
# 'high', the fourth octet is encrypted.

# path: (w/x/y/z/...)
# 'low', path after the first level is encrypted.
# 'medium', path after the second level is encrypted.
# 'high', path after the third level is encrypted.

# time: (yyyy-MM-dd HH:mm:ss)
# 'low', day is encrypted.
# 'medium', hour is encrypted.
# 'high', minute, second and millisecond are encrypted.

keysDirectory=cfg/keys/attributes

low
cwd,fsgid,fsuid,sgid,suid,remote address[EncryptedIPAddress],path[EncryptedPath],time[EncryptedTime]

medium
command line,uid,gid,remote address[EncryptedIPAddress],path[EncryptedPath],time[EncryptedTime],size

high
name,euid,remote address[EncryptedIPAddress],path[EncryptedPath],time[EncryptedTime],operation
